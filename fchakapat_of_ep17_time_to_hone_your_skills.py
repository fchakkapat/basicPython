# -*- coding: utf-8 -*-
"""fchakapat of EP17 - Time to hone your skills.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1NCh-ZBJ8IDv1APP_3ZmvUI1yFZxVjgQ0

## ถึงเวลาฝึกเขียนฟังชั่นด้วยตัวคุณเอง

![alt text](https://images.unsplash.com/photo-1530020212948-b057fc5c908c?ixlib=rb-0.3.5&ixid=eyJhcHBfaWQiOjEyMDd9&s=49e4719b1208fdfabd79cae325a1927a&auto=format&fit=crop&w=500&q=60)

แบบฝึกหัดนี้ นักเรียนต้องเขียน function ทั้งหมด 10 functions และทดลองรันดูว่ามันทำงานได้ถูกต้องหรือเปล่า?

เราจะให้ template และ docstring ไว้ และนักเรียนต้องเขียนต่อให้จบ 

ทบทวนนิดหน่อย
- def keyword ใช้สร้างฟังชั่น
- return keyword สามารถฝากค่า output ที่ได้จากฟังชั่นในตัวแปรใหม่ได้
- ดูการย่อหน้าให้ดี ปกติ Python จะย่อหน้าให้เราอัตโนมัติ แบบ space bar 2 เคาะ (หรือ 4 เคาะ)

## ห้ามดูเฉลยก่อนลองทำด้วยตัวเอง

เฉลยของ 10 functions นี้จะอยู่ในวีดีโอ EP17 
ทุกคนทำได้ !! พร้อมแล้วก็เริ่มกันเลย

---

### function 1

```
def add_three_nums(a,b,c):
    '''return the total sum of a b c'''
    return value
    
### expected output
add_three_nums(1,2,3) 
6
```
"""

def add_three_nums(a,b,c):
  return a+b+c
add_three_nums(1,2,3)

"""### function 2
```
def greeting():
    '''print 'Hello' 5 times'''
    print ...

### expected output
greeting()
Hello
Hello
Hello
Hello
Hello
```
"""

## function2 - your code here
def greeting():
  for i in range(5):
    print("Hello\n")

greeting()

"""### function 3
``` 
def upper_case(word):
    '''return upper-case of input word'''
    return string
    
### expected output
upper_case("castle")
'CASTLE'
```


"""

## function3 - your code here
def upper_case(x):
  return x.upper()
upper_case("castle")

"""### function 4

```
def sum_list(list_a):
    '''return total sum of all numbers in list_a'''
    return value

### expected output
sum_list([1,2,3,4,5])
15
```


"""

## function4 - your code here
def sum_list(a):
    b=0
    for i in a:
      b=b+i
    print(b)

sum_list([1,2,3,4,5])

"""### function 5
```
def cube(value, power=3):
    '''return value raised to power 3'''
    return result
    
### expected output
cube(2)
8
cube(3)
27
cube(4)
64
```
"""

## function5 - your code here
def cube(value, power=3):
  value=value**power
  return value
cube(2)

"""### function 6

```
def first_last(list_a):
    '''return first and last value of list_a'''
    return list
    
### expected output
first_last([1,2,3,4,5])
[1, 5]
first_last(['hi',2,3,4,5,'python'])
['hi', 'python']
```
"""

## function6 - your code here
def first_last(list_a):
  list1 = list((list_a[0],list_a[-1]))
  return list1
print(first_last([1,2,3,4,5]))
print(first_last(['hi',2,3,4,5,'python']))

"""### function 7

```
def grade_calc(score):
    '''return grade of this student
    score >= 90 'A'
    score >= 80 'B'
    score >= 70 'C'
    score >= 60 'D'
    score < 60 'Failed'
    '''
    return grade
 
### expected output
grade_calc(99)
A
grade_calc(72)
C
grade_calc(52)
Failed
```
"""

## function7 - your code here
def grade_calc(score):
    if score >= 90 :
      return 'A'
    elif score >= 80 :
      print('B')
    elif score >= 70 :
      print('C')
    elif score >= 60 :
      print('D')
    else :
      print('Failed')
grade_calc(52)

"""### function 8

```
def grade_calc_list(list_of_score):
    '''return grade of student in a list
        modify your code in function 7
    '''
    return list
    
### expected output
grade_calc_list([80, 92, 50])
['B', 'A', 'Failed']
grade_calc_list([20, 68, 75])
['Failed', 'D', 'C']
```
"""

## function8 - your code here
def grade_calc_list(list_of_score):
  listA=[]
  for score in list_of_score:
      if score >= 90 :
        listA.append('A')
      elif score >= 80 :
        listA.append('B')
      elif score >= 70 :
        listA.append('C')
      elif score >= 60 :
        listA.append('D')
      else :
        listA.append('Failed')
  print(listA)

grade_calc_list([20, 68, 75])

"""# function 9 & function 10 -- Intermediate Level

โจทย์ข้อ 9-10 จะยากขึ้นมาหน่อย เราใช้ทุกอย่างที่เรียนกันมาเลยในการเขียนฟังชั่นนี้
- dictionary
- for loop
- if-else
- string method

ลองทำดูก่อน เสร็จแล้วลองไปดูเฉลยอีกทีนะครับ :)

เพื่อช่วยให้การเขียนข้อ 9-10 ง่ายขึ้น เราให้ template มาเลย นักเรียนแค่เขียนโค้ดเพิ่มตรง ___

### function 9

```
def count_element(list_a):
    '''count element in this list
        and return a dictionary key-value pair
    '''
    result = {}
    
    for _____ in list_a:
        if _____ in result:
            result[_____] += 1
        else:
            result[_____] = 1
    
    return result

### expected output
count_element(['red', 'red', 'blue', 'green', 'blue'])
{'red': 2, 'blue':2, 'green': 1}
```
"""

## function9 - your code here
def count_element(list_a):
  result = {}
  for i in list_a:
      if i in result:
            result[i] += 1
      else:
            result[i] = 1
  return result
count_element(['red', 'red', 'blue', 'green', 'blue'])

"""### function 10

```
def special_func(text):
    '''
    How to write this function
      1. lower-case the text
      2. split text into list
      3. upper-case the word 'PYTHON'
      4. return the result
    '''
    
    text = text._____()
    text = text._____()
    
    result = []
    
    for word in text:
        if word == 'python':
            upper_word = word._____()
            result.append(_____)
        else:
            result.append(_____)
    
    return result

### example output
special_func("I AM lEARning python PROGramming")
['i', 'am', 'learning', 'PYTHON', 'programming']

special_func("python is very fun")
['PYTHON', 'is', 'very', 'fun']
```
"""

## function10 - your code here
def special_func(text):
  text = text.lower()
  text = text.split()
  result = []

  for word in text:
      if word == 'python':
         upper_word = word.upper()
         result.append(upper_word)
      else:
         result.append(word)
  return result
print(special_func("python is very fun"))
print(special_func("I AM lEARning python PROGramming"))

"""## You are AWESOME !!

Rememeber -- ก้าวแรกของการเป็น Pythonista คือการเขียนฟังชั่นใช้เองด้วย **def** keyword

โอเคร !! ไปดูเฉลยได้ใน EP17 เลย

Print VS return
"""

# writing basic function in Python
def greeting():
  print("Hello World")
  
# return vs. print
def test_func():
  return 100

def test_func():
  print(100)
  
x = test_func()
y = test_func()

print(x) #output: 100
print(y) #output: None